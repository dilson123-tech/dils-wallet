name: Slack Webhook Test
on:
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Send test to Slack (trim + follow redirects + wide 2xx)
        env:
          WEBHOOK_RAW: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          set -euo pipefail

          # Trim de espaços/quebras de linha no segredo
          WEBHOOK="$(printf "%s" "$WEBHOOK_RAW" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
          echo "Len WEBHOOK raw: $(printf "%s" "$WEBHOOK_RAW" | wc -c) chars"
          echo "Len WEBHOOK trim: $(printf "%s" "$WEBHOOK" | wc -c) chars"

          # Sanity format check (sem vazar)
          echo "$WEBHOOK" | grep -qE '^https://hooks\.slack\.com/services/[^/]+/[^/]+/.+$' || { echo "URL de webhook inválida"; exit 1; }

          TS="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          MSG="✅ Slack webhook OK via GitHub Actions @ $TS"
          JSON_PAYLOAD=$(printf '{"text":"%s"}' "$MSG")

          # Faz a request com redirect e log de headers
          CODE=$(curl -sS -L --max-redirs 5 -D /tmp/headers.txt \
            -o /tmp/slack_resp.txt -w "%{http_code}" \
            -X POST \
            -H 'Accept: application/json' \
            -H 'Content-type: application/json' \
            --data "$JSON_PAYLOAD" "$WEBHOOK" )

          echo "HTTP=$CODE"
          echo "--- Response headers ---"
          sed -e 's/^/H: /' /tmp/headers.txt || true
          echo "--- Body ---"
          BODY="$(cat /tmp/slack_resp.txt || true)"
          printf "%s\n" "$BODY"

          # Sucesso: 2xx (200..204). Quando 200, Slack costuma responder "ok"
          case "$CODE" in
            200|201|202|204) exit 0 ;;
            *) echo "Falha: HTTP=$CODE"; exit 1 ;;
          esac
