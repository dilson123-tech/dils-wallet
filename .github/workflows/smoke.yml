name: Smoke + Health

on:
  workflow_dispatch:
  push:
    branches: [main]
  schedule:
    - cron: '*/15 * * * *'  # a cada 15 minutos

jobs:
  smoke:
    if: github.event_name != 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y jq
      - name: Run smoke test (STRICT)
        env:
          BASE: https://dils-wallet-production.up.railway.app
          EMAIL: smoke@dilswallet.com
          PASS: 123456
          AMOUNT: "37.50"
          WITHDRAW: "5.00"
          STRICT: "true"
        run: bash scripts/smoke_prod.sh
      - name: Upload artifacts (extrato)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: extrato-smoke
          path: artifacts/*
          if-no-files-found: warn

  notify_smoke:
    needs: [smoke]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    env:
      RESULT: ${{ needs.smoke.result }}
    steps:
      - name: Decide & send Telegram if smoke failed
        run: |
          set -euo pipefail
          echo "smoke result: $RESULT"
          if [ "${RESULT:-}" != "success" ]; then
            MSG="❌ Smoke + Health (smoke) falhou em $GITHUB_REPOSITORY
run=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            HTTP=$(curl -s -o tg.txt -w '%{http_code}' \
                   -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage" \
                   -d chat_id="${{ secrets.TG_CHAT_ID }}" \
                   --data-urlencode text="$MSG") || true
            echo "HTTP=$HTTP" | tee tg.http
            tail -c 800 tg.txt || true
          else
            echo "smoke success; skip TG" | tee tg.http
            echo '{"ok":true,"skipped":true}' > tg.txt
          fi
      - name: Upload TG artifacts (smoke)
      - name: Ensure TG files exist (safety)
        if: always()
        run: |
          [ -s tg.http ] || echo "HTTP=000" > tg.http
          [ -s tg.txt ]  || echo "{""ok"":false,""note"":""no request""}" > tg.txt
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tg-debug-smoke
          path: |
            tg.http
            tg.txt

  health:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get update && sudo apt-get install -y jq
      - name: Health ping
        env:
          BASE: https://dils-wallet-production.up.railway.app
        run: |
          set -euo pipefail
          echo "▶ GET $BASE/api/v1/health"
          OUT=$(curl -fsS "$BASE/api/v1/health")
          echo "$OUT"
          # valida JSON com jq e exige status=ok
          echo "$OUT" | jq -r '.status' | grep -qx 'ok'
          echo "✔ Health OK (status=ok)"

  notify_health:
    needs: [health]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    env:
      RESULT: ${{ needs.health.result }}
    steps:
      - name: Decide & send Telegram if health failed
        run: |
          set -euo pipefail
          echo "health result: $RESULT"
          if [ "${RESULT:-}" != "success" ]; then
            MSG="❌ Smoke + Health (health) falhou em $GITHUB_REPOSITORY
run=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            HTTP=$(curl -s -o tg.txt -w '%{http_code}' \
                   -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage" \
                   -d chat_id="${{ secrets.TG_CHAT_ID }}" \
                   --data-urlencode text="$MSG") || true
            echo "HTTP=$HTTP" | tee tg.http
            tail -c 800 tg.txt || true
          else
            echo "health success; skip TG" | tee tg.http
            echo '{"ok":true,"skipped":true}' > tg.txt
          fi
      - name: Upload TG artifacts (health)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tg-debug-health
          path: |
            tg.http
            tg.txt
