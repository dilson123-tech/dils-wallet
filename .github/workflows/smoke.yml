name: Smoke + Health

on:
  workflow_dispatch:
  push:
    branches: [main]
  schedule:
    - cron: '*/15 * * * *'  # a cada 15 minutos

jobs:
  smoke:
    if: github.event_name != 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y jq
      - name: Run smoke test (STRICT)
        env:
          BASE: https://dils-wallet-production.up.railway.app
          EMAIL: smoke@dilswallet.com
          PASS: 123456
          AMOUNT: "37.50"
          WITHDRAW: "5.00"
          STRICT: "true"
        run: bash scripts/smoke_prod.sh
      - name: Upload artifacts (extrato)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: extrato-smoke
          path: artifacts/*
      - name: Notify Telegram on failure (Smoke)
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TG_CHAT_ID }}
          NAME:     Smoke + Health (smoke)
          RUN_URL:  ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          set -euo pipefail
          sleep 2
          MSG="❌ $NAME falhou em $GITHUB_REPOSITORY
run=$RUN_URL"
          HTTP=$(curl -s -o /tmp/tg.txt -w %{http_code} \
                 -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                 -d chat_id="$TELEGRAM_CHAT_ID" \
                 --data-urlencode text="$MSG") || true
          echo "HTTP=$HTTP" | tee tg.http
          tail -c 800 /tmp/tg.txt || true
      - name: Upload TG artifacts (smoke)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tg-debug-smoke
          path: |
            tg.http
            /tmp/tg.txt

  health:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get update && sudo apt-get install -y jq
      - name: Health ping
        env:
          BASE: https://dils-wallet-production.up.railway.app
        run: |
          set -euo pipefail
          echo "▶ GET $BASE/api/v1/health"
          OUT=$(curl -fsS "$BASE/api/v1/health")
          echo "$OUT"
          # valida JSON com jq e exige status=ok
          echo "$OUT" | jq -r '.status' | grep -qx 'ok'
          echo "✔ Health OK (status=ok)"
          echo "✔ Health OK (status=ok)"
      - name: Notify Telegram on failure (Health)
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TG_CHAT_ID }}
          NAME:     Smoke + Health (health)
          RUN_URL:  ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          set -euo pipefail
          sleep 2
          MSG="❌ $NAME falhou em $GITHUB_REPOSITORY
run=$RUN_URL"
          HTTP=$(curl -s -o /tmp/tg.txt -w %{http_code} \
                 -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                 -d chat_id="$TELEGRAM_CHAT_ID" \
                 --data-urlencode text="$MSG") || true
          echo "HTTP=$HTTP" | tee tg.http
          tail -c 800 /tmp/tg.txt || true
      - name: Upload TG artifacts (health)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tg-debug-health
          path: |
            tg.http
            /tmp/tg.txt
